<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stability on Longhorn Manual Test Cases</title>
    <link>https://longhorn.github.io/longhorn-tests/manual/pre-release/stability/</link>
    <description>Recent content in Stability on Longhorn Manual Test Cases</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://longhorn.github.io/longhorn-tests/manual/pre-release/stability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Checksum enabled large volume with multiple rebuilding</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/pre-release/stability/checksum-enabled-large-volume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/pre-release/stability/checksum-enabled-large-volume/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Create a 50 Gi volume. write around 30 Gi data into it.&lt;/li&gt;&#xA;&lt;li&gt;Enable the setting &lt;code&gt;Snapshot Data Integrity&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Keep writing in the volume continuously using dd command like &lt;code&gt;while true; do dd if=/dev/urandom of=t1 bs=512 count=1000 conv=fsync status=progress &amp;amp;&amp;amp; rm t1; done&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Create a recurring job of backup for every 15 min.&lt;/li&gt;&#xA;&lt;li&gt;Delete a replica and wait for the replica rebuilding.&lt;/li&gt;&#xA;&lt;li&gt;Compare the performance of replica rebuilding from previous Longhorn version without the setting &lt;code&gt;Snapshot Data Integrity&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Verify the Longhorn manager logs, no abnormal logs should be present.&lt;/li&gt;&#xA;&lt;li&gt;Repeat the steps of deletion of the replica and verify Longhorn doesn&amp;rsquo;t take more time than the first iteration.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Longhorn installation multiple times</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/pre-release/stability/multiple-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/pre-release/stability/multiple-installation/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Create a cluster(3 worker nodes and 1 etc/control plane).&lt;/li&gt;&#xA;&lt;li&gt;Deploy the longhorn app.&lt;/li&gt;&#xA;&lt;li&gt;Once longhorn deployed successfully, uninstall longhorn.&lt;/li&gt;&#xA;&lt;li&gt;Repeat the steps 2 and 3 multiple times.&lt;/li&gt;&#xA;&lt;li&gt;Run the below script to install and uninstall longhorn continuously for some time.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;installcount=0&#xA;while true;&#xA; echo `date`&#xA; do&#xA;  kubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/master/deploy/longhorn.yaml&#xA;&#xA;  pod=`kubectl get pods -n longhorn-system | grep -i &amp;#39;longhorn-manager&amp;#39; | grep -i &amp;#39;running&amp;#39; | awk -F &amp;#39; &amp;#39; &amp;#39;{print $2}&amp;#39; | grep &amp;#39;1/1&amp;#39; | wc -l`&#xA;  count=0&#xA;  while [ $pod != 3 ];&#xA;   do&#xA;    sleep 5&#xA;    pod=`kubectl get pods -n longhorn-system | grep -i &amp;#39;longhorn-manager&amp;#39; | grep -i &amp;#39;running&amp;#39; | awk -F &amp;#39; &amp;#39; &amp;#39;{print $2}&amp;#39; | grep &amp;#39;1/1&amp;#39; | wc -l`&#xA;    echo `kubectl get pods -n longhorn-system | grep -i &amp;#39;longhorn-manager&amp;#39;`&#xA;    count=$((count+1))&#xA;    if [ $count -gt 59 ]&#xA;     then&#xA;      echo &amp;#39;longhorn installation failed&amp;#39;&#xA;      exit&#xA;    fi&#xA;  done&#xA;&#xA;  sleep 30&#xA; &#xA;  kubectl create -f https://raw.githubusercontent.com/longhorn/longhorn/master/uninstall/uninstall.yaml&#xA;&#xA;  poduninstall=`kubectl get job/longhorn-uninstall -n default | grep &amp;#39;1/1&amp;#39; | wc -l`&#xA;  uninstall=0&#xA; while [ $poduninstall = 0 ];&#xA;  do&#xA;   sleep 10&#xA;   poduninstall=`kubectl get job/longhorn-uninstall -n default | grep &amp;#39;1/1&amp;#39; | wc -l`&#xA;   echo `kubectl get job/longhorn-uninstall`&#xA;   uninstall=$((uninstall+1))&#xA;   if [ $uninstall -gt 24 ]  &#xA;    then&#xA;     echo &amp;#39;Problem in unistall&amp;#39;&#xA;     exit&#xA;   fi&#xA; done&#xA; &#xA; kubectl delete -f https://raw.githubusercontent.com/longhorn/longhorn/master/deploy/longhorn.yaml&#xA; sleep 3&#xA;&#xA; kubectl delete -f https://raw.githubusercontent.com/longhorn/longhorn/master/uninstall/uninstall.yaml&#xA;&#xA; nscount=0&#xA; longhornns=`kubectl get namespace | grep -i &amp;#39;longhorn-system&amp;#39; | wc -l`&#xA; while [ $longhornns != 0 ];&#xA;  do&#xA;   sleep 10&#xA;   longhornns=`kubectl get namespace | grep -i &amp;#39;longhorn-system&amp;#39; | wc -l`&#xA;   nscount=$((nscount+1))&#xA;   if [ $nscount -gt 18 ]&#xA;    then&#xA;     echo &amp;#39;longhorn-system termination stuck&amp;#39;&#xA;     exit&#xA;   fi&#xA; done&#xA;&#xA; installcount=$((installcount+1))&#xA; echo &amp;#39;Installation count = &amp;#39;&#xA; echo $installcount&#xA;done&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
