<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Resiliency on Longhorn Manual Test Cases</title>
    <link>https://longhorn.github.io/longhorn-tests/manual/pre-release/resiliency/</link>
    <description>Recent content in Resiliency on Longhorn Manual Test Cases</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://longhorn.github.io/longhorn-tests/manual/pre-release/resiliency/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[#2206](https://github.com/longhorn/longhorn/issues/2206) Fix the spinning disk on Longhorn</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/pre-release/resiliency/simulated-slow-disk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/pre-release/resiliency/simulated-slow-disk/</guid>
      <description>&lt;p&gt;This case requires the creation of a slow virtual disk with &lt;code&gt;dmsetup&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a slow disk:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Make a disk image file: &lt;code&gt;truncate -s 10g slow.img&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Create a loopback device: &lt;code&gt;losetup --show -P -f slow.img&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Get the block size of the loopback device: &lt;code&gt;blockdev --getsize /dev/loopX&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Create slow device: &lt;code&gt;echo &amp;quot;0 &amp;lt;blocksize&amp;gt; delay /dev/loopX 0 500&amp;quot; | dmsetup create dm-slow&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Format slow device: &lt;code&gt;mkfs.ext4 /dev/mapper/dm-slow&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Mount slow device: &lt;code&gt;mount /dev/mapper/dm-slow /mnt&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Build longhorn-engine and run it on the slow disk.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PVC provisioning with insufficient storage</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/pre-release/resiliency/pvc_provisioning_with_insufficient_storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/pre-release/resiliency/pvc_provisioning_with_insufficient_storage/</guid>
      <description>&lt;h4 id=&#34;related-issue&#34;&gt;Related Issue:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/longhorn/longhorn/issues/4654&#34;&gt;https://github.com/longhorn/longhorn/issues/4654&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/longhorn/longhorn/issues/3529&#34;&gt;https://github.com/longhorn/longhorn/issues/3529&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;root-cause-analysis&#34;&gt;Root Cause Analysis&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/longhorn/longhorn/issues/4654#issuecomment-1264870672&#34;&gt;https://github.com/longhorn/longhorn/issues/4654#issuecomment-1264870672&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This case need to be tested on both RWO/RWX volumes&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a PVC with size larger than 8589934591 GiB.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Deployment keep in pending status, RWO/RWX volume will keep in a create -&amp;gt; delete loop.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Create a PVC with size &amp;lt;= 8589934591 GiB, but greater than the actual available space size.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;RWO/RWX volume will be created, and volume will have annotation &amp;ldquo;longhorn.io/volume-scheduling-error&amp;rdquo;: &amp;ldquo;insufficient storage volume scheduling failure&amp;rdquo; in it.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Create a PVC with size &amp;lt; the actual available space sizeï¼ŒResize the PVC to a not schedulable size&#xA;&lt;ul&gt;&#xA;&lt;li&gt;After resize PVC to a not schedulable size, both RWO/RWX were still in scheduling status.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;We can modify/use &lt;a href=&#34;https://raw.githubusercontent.com/longhorn/longhorn/master/examples/rwx/rwx-nginx-deployment.yaml&#34;&gt;https://raw.githubusercontent.com/longhorn/longhorn/master/examples/rwx/rwx-nginx-deployment.yaml&lt;/a&gt; to deploy RWO/RWX PVC for this test&lt;/p&gt;</description>
    </item>
    <item>
      <title>Test Longhorn components recovery</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/pre-release/resiliency/test-longhorn-component-recovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/pre-release/resiliency/test-longhorn-component-recovery/</guid>
      <description>&lt;p&gt;This is a simple test is check if all the components are recoverable.&lt;/p&gt;&#xA;&lt;h4 id=&#34;test-data-setup&#34;&gt;Test data setup:&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Deploy Longhorn on a 3 nodes cluster.&lt;/li&gt;&#xA;&lt;li&gt;Create a volume &lt;code&gt;vol-1&lt;/code&gt; using Longhorn UI.&lt;/li&gt;&#xA;&lt;li&gt;Create a volume &lt;code&gt;vol-2&lt;/code&gt; using the Longhorn storage class.&lt;/li&gt;&#xA;&lt;li&gt;Create a volume &lt;code&gt;vol-3&lt;/code&gt; with backing image.&lt;/li&gt;&#xA;&lt;li&gt;Create an RWX volume &lt;code&gt;vol-4&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Write some data in all the volumes created and compute the md5sum.&lt;/li&gt;&#xA;&lt;li&gt;Have all the volumes in attached state.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;test-steps&#34;&gt;Test steps:&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Delete the IM-e from every volume and make sure every volume recovers. Check the data as well.&lt;/li&gt;&#xA;&lt;li&gt;Start replica rebuilding for the aforementioned volumes, and delete the IM-e while it is rebuilding. Verify the recovered volumes.&lt;/li&gt;&#xA;&lt;li&gt;Delete the Share-manager pod and verify the RWX volume &lt;code&gt;vol-4&lt;/code&gt; is able recover. Verify the data too.&lt;/li&gt;&#xA;&lt;li&gt;Delete the backing image manager pod and verify the pod gets recreated.&lt;/li&gt;&#xA;&lt;li&gt;Delete one pod of all the Longhorn components like longhorn-manager, ui, csi components etc and verify they are able to recover.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Test timeout on loss of network connectivity</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/pre-release/resiliency/timeout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/pre-release/resiliency/timeout/</guid>
      <description>&lt;h2 id=&#34;rw-timeout-block-device&#34;&gt;R/W Timeout Block Device&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a docker network:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker network create -d bridge --subnet 192.168.22.0/24 longhorn-network&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Start a replica:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --net longhorn-network --ip 192.168.22.2 &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;         -v /volume longhornio/longhorn-engine:&amp;lt;tag&amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;         longhorn replica --listen 192.168.22.2:9502 --size 10g /volume&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Start another replica:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --net longhorn-network --ip 192.168.22.3 &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;         -v /volume longhornio/longhorn-engine:&amp;lt;tag&amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;         longhorn replica --listen 192.168.22.3:9502 --size 10g /volume&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;In another terminal, start the controller:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --net longhorn-network --ip 192.168.22.4 --privileged &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;         -v /dev:/dev -v /proc:/host/proc &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;         longhornio/longhorn-engine:&amp;lt;tag&amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;         longhorn controller --replica tcp://192.168.22.2:9502 &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;         --replica tcp://192.168.22.3:9502 &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;         --frontend tgt-blockdev timeout-test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;In another terminal, perform I/O:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fio --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;random-writers --ioengine&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;libaio --rw&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;randwrite --bs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;16k &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;           --direct&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; --size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1000m --numjobs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;           --filename&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/dev/longhorn/timeout-test --iodepth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;In another terminal, find the name of the container running the replica with &lt;code&gt;docker ps&lt;/code&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
