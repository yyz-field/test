<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>v1.2.0 on Longhorn Manual Test Cases</title>
    <link>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.2.0/</link>
    <description>Recent content in v1.2.0 on Longhorn Manual Test Cases</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.2.0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Test backing image</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.2.0/test-backing-image-upload/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.2.0/test-backing-image-upload/</guid>
      <description>&lt;h2 id=&#34;test-upload&#34;&gt;Test upload&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Prepare a large backing image file (make sure the size is greater than 1Gi and the uploading time is longer than 1 minute) in local.&lt;/li&gt;&#xA;&lt;li&gt;Click the backing image creation button in UI, choose &lt;code&gt;Upload From Local&lt;/code&gt;, select the file then start upload.&lt;/li&gt;&#xA;&lt;li&gt;Wait for the initialization complete. Then the upload progress will be shown.&lt;/li&gt;&#xA;&lt;li&gt;During the uploading, verify the corresponding backing image data source pod won&amp;rsquo;t use too many CPU (50 ~ 200m) and memory(50 ~ 200Mi) resources.&lt;/li&gt;&#xA;&lt;li&gt;Open another backing image UI page, the progress can be still found in the backing image detail page.&lt;/li&gt;&#xA;&lt;li&gt;When the upload is in progress, refresh the UI page to interrupt the upload.&lt;/li&gt;&#xA;&lt;li&gt;Verified that the upload failed without retry (typically the retry will happen after 1~2 minute). And there is a message indicates the failure.&lt;/li&gt;&#xA;&lt;li&gt;Delete the failed one then restart the uploading by creating a new backing image.&lt;/li&gt;&#xA;&lt;li&gt;Create and attach a volume with the backing image. Verify the data content is correct.&lt;/li&gt;&#xA;&lt;li&gt;Do cleanup.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;upload-via-rancher-uri&#34;&gt;Upload via Rancher URI&lt;/h3&gt;&#xA;&lt;p&gt;&lt;sup&gt;Related issue: &lt;a href=&#34;https://github.com/longhorn/longhorn/issues/3129&#34;&gt;3129&lt;/a&gt; with fix in Longhorn v1.3.0+&lt;/sup&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Test Backup Creation With Old Engine Image</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.2.0/backup-creation-with-old-engine-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.2.0/backup-creation-with-old-engine-image/</guid>
      <description>&lt;h2 id=&#34;related-issue&#34;&gt;Related issue&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/longhorn/longhorn/issues/2897&#34;&gt;https://github.com/longhorn/longhorn/issues/2897&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;test-step&#34;&gt;Test Step&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Given&lt;/strong&gt; with Longhorn v1.2.0-rc2 or above.&#xA;&lt;em&gt;And&lt;/em&gt; deploy engine image &lt;code&gt;oldEI&lt;/code&gt; older than v1.2.0 (for example: &lt;code&gt;longhornio/longhorn-engine:v1.1.2&lt;/code&gt;).&#xA;&lt;em&gt;And&lt;/em&gt; create volume &lt;code&gt;vol-old-engine&lt;/code&gt;.&#xA;&lt;em&gt;And&lt;/em&gt; attach volume &lt;code&gt;vol-old-engine&lt;/code&gt; to one of a node.&#xA;&lt;em&gt;And&lt;/em&gt; upgrade volume &lt;code&gt;vol-old-engine&lt;/code&gt; to engine image &lt;code&gt;oldEI&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;When&lt;/strong&gt; create backup of volume &lt;code&gt;vol-old-engine&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Then&lt;/strong&gt; watch kubectl &lt;code&gt;kubectl get backups.longhorn.io -l backup-volume=vol-old-engine -w&lt;/code&gt;.&#xA;&lt;em&gt;And&lt;/em&gt; should see two backups temporarily (in transition state).&#xA;&lt;em&gt;And&lt;/em&gt; should see only one backup be left after a while.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Test instance manager cleanup during uninstall</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.2.0/test-instance-manager-cleanup-during-uninstall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.2.0/test-instance-manager-cleanup-during-uninstall/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Deploy Longhorn v1.1.2&lt;/li&gt;&#xA;&lt;li&gt;Launch some running volumes.&lt;/li&gt;&#xA;&lt;li&gt;Upgrade to v1.2.0. ==&amp;gt; All old unused engine managers should be cleaned up automatically.&lt;/li&gt;&#xA;&lt;li&gt;Make sure all running volumes keep state &lt;code&gt;running&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Upgrade all volumes. ==&amp;gt; All old replica managers should be cleaned up automatically.&lt;/li&gt;&#xA;&lt;li&gt;Detach all running volumes. ==&amp;gt; All old engine managers should be cleaned up automatically.&lt;/li&gt;&#xA;&lt;li&gt;do offline upgrade then reattach these volumes.&lt;/li&gt;&#xA;&lt;li&gt;Directly uninstall the Longhorn system.&#xA;And use &lt;code&gt;kubectl -n longhorn-system get lhim -w&lt;/code&gt; to verify that the system doesn&amp;rsquo;t loop in instance manager cleanup-recreation.&#xA;==&amp;gt; The uninstaller should work fine.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Test Label-driven Recurring Job</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.2.0/label-driven-recurring-job/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.2.0/label-driven-recurring-job/</guid>
      <description>&lt;h2 id=&#34;related-issue&#34;&gt;Related issue&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/longhorn/longhorn/issues/467&#34;&gt;https://github.com/longhorn/longhorn/issues/467&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;test-recurring-job-concurrency&#34;&gt;Test Recurring Job Concurrency&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Given&lt;/strong&gt; create &lt;code&gt;snapshot&lt;/code&gt; recurring job with &lt;code&gt;concurrency&lt;/code&gt; set to &lt;code&gt;2&lt;/code&gt; and include &lt;code&gt;snapshot&lt;/code&gt; recurring job &lt;code&gt;default&lt;/code&gt; in groups.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;When&lt;/strong&gt; create volume &lt;code&gt;test-job-1&lt;/code&gt;.&lt;br&gt;&#xA;&lt;em&gt;And&lt;/em&gt; create volume &lt;code&gt;test-job-2&lt;/code&gt;.&lt;br&gt;&#xA;&lt;em&gt;And&lt;/em&gt; create volume &lt;code&gt;test-job-3&lt;/code&gt;.&lt;br&gt;&#xA;&lt;em&gt;And&lt;/em&gt; create volume &lt;code&gt;test-job-4&lt;/code&gt;.&lt;br&gt;&#xA;&lt;em&gt;And&lt;/em&gt; create volume &lt;code&gt;test-job-5&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Then&lt;/strong&gt; moniter the cron job pod log.&lt;br&gt;&#xA;&lt;em&gt;And&lt;/em&gt; should see 2 jobs created concurrently.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;When&lt;/strong&gt; update &lt;code&gt;snapshot1&lt;/code&gt; recurring job with &lt;code&gt;concurrency&lt;/code&gt; set to &lt;code&gt;3&lt;/code&gt;.&lt;br&gt;&#xA;&lt;strong&gt;Then&lt;/strong&gt; moniter the cron job pod log.&#xA;&lt;em&gt;And&lt;/em&gt; should see 3 jobs created concurrently.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Test Version Bump of Kubernetes, API version group, CSI component&#39;s dependency version</title>
      <link>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.2.0/test_version_bump/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://longhorn.github.io/longhorn-tests/manual/release-specific/v1.2.0/test_version_bump/</guid>
      <description>&lt;p&gt;GitHub issue: &lt;a href=&#34;https://github.com/longhorn/longhorn/issues/2757&#34;&gt;https://github.com/longhorn/longhorn/issues/2757&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;test-with-specific-kubernetes-version&#34;&gt;Test with specific Kubernetes version&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;For each Kubernetes version (1.18, 1.19, 1.20, 1.21, 1.22), test basic functionalities of Longhorn v1.2.0&#xA;(create/attach/detach/delete volume/backup/snapshot using yaml/UI)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;test-kubernetes-and-longhorn-upgrade&#34;&gt;Test Kubernetes and Longhorn upgrade&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Deploy K3s v1.21&lt;/li&gt;&#xA;&lt;li&gt;Deploy Longhorn v1.1.2&lt;/li&gt;&#xA;&lt;li&gt;Create some workload pods using Longhorn volumes&lt;/li&gt;&#xA;&lt;li&gt;Upgrade Longhorn to v1.2.0&lt;/li&gt;&#xA;&lt;li&gt;Verify that everything is OK&lt;/li&gt;&#xA;&lt;li&gt;Upgrade K3s to v1.22&lt;/li&gt;&#xA;&lt;li&gt;Verify that everything is OK&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;retest-the-upgrade-lease-lock&#34;&gt;Retest the Upgrade Lease Lock&lt;/h1&gt;&#xA;&lt;p&gt;We remove the client-go patch &lt;a href=&#34;https://github.com/longhorn/longhorn-manager/pull/639#issuecomment-905030885&#34;&gt;https://github.com/longhorn/longhorn-manager/pull/639#issuecomment-905030885&lt;/a&gt;,&#xA;so we need to retest the test ../v1.0.2/upgrade-lease-lock.md&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
