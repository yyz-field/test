name: Create-Issue
on:
  issues:
    types: [ labeled ]
jobs:
  automation:
    runs-on: ubuntu-latest
    if: contains(github.event.label.name, 'require/auto-e2e-test')
    steps:
    - name: Is Longhorn Member
      uses: tspascoal/get-user-teams-membership@v1.0.4
      id: is-longhorn-member
      with:
        username: ${{ github.actor }}
        organization: yyz-field
        GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
    - name: Check if Automation Issue Exists
      if: fromJSON(steps.is-longhorn-member.outputs.teams)[0] != null
      uses: actions-cool/issues-helper@v3
      id: if-automation-issue-exists
      with:
        actions: 'find-issues'
        token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        issue-state: 'all'
        title-includes: |
          [TEST]${{ github.event.issue.title }}
    - name: Create Automation Test Issue
      if: fromJSON(steps.is-longhorn-member.outputs.teams)[0] != null && fromJSON(steps.if-automation-issue-exists.outputs.issues)[0] == null
      uses: dacbd/create-issue-action@v1
      id: create-automation-test-issue
      with:
        token: ${{ github.token }}
        title: |
          [TEST]${{ github.event.issue.title }}
        body: |
          adding/updating auto e2e test cases for ${{ github.event.issue.html_url }} if they can be automated
          
          cc @longhorn/qa
        labels: kind/test
    - name: Add Issue to QA & Devops Project
      if: steps.create-automation-test-issue.outcome == 'success'
      uses: yangchiu/bot/add-to-project-action@add-to-project
      with:
        project-url: https://github.com/orgs/yyz-field/projects/2
        issue-node-id: ${{ fromJSON(steps.create-automation-test-issue.outputs.json).node_id }}
        github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

  ui:
    runs-on: ubuntu-latest
    if: contains(github.event.label.name, 'require/ui')
    steps:
    - name: Is Longhorn Member
      uses: tspascoal/get-user-teams-membership@v1.0.4
      id: is-longhorn-member
      with:
        username: ${{ github.actor }}
        organization: longhorn
        GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
    - name: Check if UI Issue Exists
      if: fromJSON(steps.is-longhorn-member.outputs.teams)[0] != null
      uses: actions-cool/issues-helper@v3
      id: if-ui-issue-exists
      with:
        actions: 'find-issues'
        token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        issue-state: 'all'
        title-includes: |
          [UI]${{ github.event.issue.title }}
    - name: Get Labels
      if: fromJSON(steps.is-longhorn-member.outputs.teams)[0] != null && fromJSON(steps.if-ui-issue-exists.outputs.issues)[0] == null
      id: labels
      run: |
        RAW_LABELS="${{ join(github.event.issue.labels.*.name, ' ') }}"
        echo "RAW LABELS: $RAW_LABELS"
        LABELS=$(echo "$RAW_LABELS" | sed -r 's/\s*backport\S+//g' | sed -r 's/\s*require\/ui//g' | xargs | sed 's/ /, /g')
        echo "LABELS: $LABELS"
        echo "labels=$LABELS" >> $GITHUB_OUTPUT
    - name: Create UI Test Issue
      if: fromJSON(steps.is-longhorn-member.outputs.teams)[0] != null && fromJSON(steps.if-ui-issue-exists.outputs.issues)[0] == null
      uses: dacbd/create-issue-action@v1
      with:
        token: ${{ github.token }}
        title: |
          [UI]${{ github.event.issue.title }}
        body: |
          make corresponding UI changes for ${{ github.event.issue.html_url }}

          cc @yyz-field/dev-ui
        labels: ${{ steps.labels.outputs.labels }}, area/ui
        milestone: ${{ github.event.issue.milestone.number }}